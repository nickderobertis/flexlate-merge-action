name: "Flexlate After-Merge Action"
description: "Official Flexlate Github Action to be run after merges. Merges Flexlate feature branches into main branches and handles merge conflict resolution flow."
inputs:
  branch_name:
    description: "The name of the base branch that the Flexlate branches were created on or the full name of a flexlate-templates-for-conflicts branch"
    required: true
    default: template-patches
  gh_token:
    required: true
    description: "The Github token to use for authentication"
  main_branch:
    required: true
    description: "The main branch for the repository"
    default: master
runs:
  using: "composite"
  steps:
    - name: Get branch name
      id: get_branch_name
      shell: bash
      run: |
        check_branch_name="${PASSED_BRANCH_NAME:-$MERGED_BRANCH_NAME}"
        if [[ "$check_branch_name" = flexlate-templates-* ]]; then
          # Remove flexlate-templates- prefix
          branch_suffix="${check_branch_name#flexlate-templates-}"
          # Remove -for-conflicts suffix
          base_branch="${branch_suffix%-for-conflicts}"
          echo ::set-output name=use_branch::$base_branch;
          echo ::set-output name=is_conflict_resolution::true;
          echo "Using base branch: $base_branch"
          echo "Is conflict resolution: true"
        else
          echo "$check_branch_name is not a flexlate-templates branch"
          echo "Is conflict resolution: false"
          echo ::set-output name=is_conflict_resolution::false;
          echo ::set-output name=use_branch::$check_branch_name;
        fi
      env:
        MERGED_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        PASSED_BRANCH_NAME: ${{ inputs.branch_name }}
    - name: Merge Flexlate Feature branches into Flexlate main branches
      uses: nickderobertis/flexlate-after-main-merge-action@alpha
      if: ${{ steps.get_branch_name.outputs.is_conflict_resolution == 'false' }}
      with:
        branch_name: ${{ steps.get_branch_name.outputs.use_branch }}
    - name: Handle after conflict resolution PR by merging Flexlate output branch into feature branch and opening PR
      uses: nickderobertis/flexlate-after-conflict-action@alpha
      if: ${{ steps.get_branch_name.outputs.is_conflict_resolution == 'true' }}
      with:
        branch_name: ${{ steps.get_branch_name.outputs.use_branch }}
        gh_token: ${{ inputs.gh_token }}
        main_branch: ${{ inputs.main_branch }}
